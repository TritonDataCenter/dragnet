# dnl scan-file --counters
VALUE
    0
Aggregator         noutputs:           1
Flattener          ninputs:            1
Flattener          noutputs:           1

# dnl scan-file --points --counters
Aggregator         noutputs:           1
{"fields":{},"value":0}

# dnl scan-file -b timestamp

# dnl scan-file --points -b timestamp

# dnl scan-file -b timestamp[aggr=quantize]

# dnl scan-file --points -b timestamp[aggr=quantize]

# dnl scan-file -b timestamp[aggr=quantize],req.method

# dnl scan-file --points -b timestamp[aggr=quantize],req.method

# dnl scan-file -f { "eq": [ "audit", true ] } -b timestamp[aggr=quantize],req.method

# dnl scan-file --points -f { "eq": [ "audit", true ] } -b timestamp[aggr=quantize],req.method

# dnl scan-file --counters -f { "eq": [ "audit", true ] }
VALUE
    0
Aggregator         noutputs:           1
Flattener          ninputs:            1
Flattener          noutputs:           1

# dnl scan-file --points --counters -f { "eq": [ "audit", true ] }
Aggregator         noutputs:           1
{"fields":{},"value":0}

# dnl query-file --counters
VALUE
    0
Index Aggregator   ninputs:            1
Index Aggregator   noutputs:           1
Query Passthrough  ninputs:            1
Query Passthrough  noutputs:           1
Flattener          ninputs:            1
Flattener          noutputs:           1
# dnl query-file --counters
VALUE
    0
Index Aggregator   ninputs:            1
Index Aggregator   noutputs:           1
Query Passthrough  ninputs:            1
Query Passthrough  noutputs:           1
Flattener          ninputs:            1
Flattener          noutputs:           1
# dnl query-file -f { "eq": [ "req.method", "GET" ] }
VALUE
    0
# dnl query-file -b req.method
# dnl query-file -b latency
# dnl query-file --counters -b latency
Flattener          noutputs:           1
